version: '3.8'

services:
  api-gateway:
    build: ./api-gateway
    ports:
      - "8080:8080"
    depends_on:
      - menu-service
      - recipe-service
      - fridge-service
      - auth-service
    restart: unless-stopped
    networks:
      - backend

  menu-service:
    build: ./menu-service
    ports:
      - "8081:8081"
    environment:
      - PORT=8081
      - DB_HOST=db
      - DB_PORT=5432
      - DB_USER=${DB_USER}
      - DB_PASSWORD=${DB_PASSWORD}
      - DB_NAME=${MENU_DB_NAME}
    depends_on:
      - db
    restart: unless-stopped
    networks:
      - backend

  recipe-service:
    build: ./recipe-service
    ports:
      - "8082:8082"
    environment:
      - PORT=8082
      - DB_HOST=db
      - DB_PORT=5432
      - DB_USER=${DB_USER}
      - DB_PASSWORD=${DB_PASSWORD}
      - DB_NAME=${RECIPE_DB_NAME}
    depends_on:
      - db
    restart: unless-stopped
    networks:
      - backend

  fridge-service:
    build: ./fridge-service
    ports:
      - "8083:8083"
    environment:
      - PORT=8083
      - DB_HOST=db
      - DB_PORT=5432
      - DB_USER=${DB_USER}
      - DB_PASSWORD=${DB_PASSWORD}
      - DB_NAME=${FRIDGE_DB_NAME}
    depends_on:
      - db
    restart: unless-stopped
    networks:
      - backend

  auth-service:
    build: ./auth-service
    ports:
      - "8084:8084"
    environment:
      - PORT=8084
    restart: unless-stopped
    networks:
      - backend



  db:
    image: postgres:17
    environment:
      POSTGRES_USER: ${DB_USER}
      POSTGRES_PASSWORD: ${DB_PASSWORD}
    ports:
      - "5432:5432"
    volumes:
      - db-data:/var/lib/postgresql/data
    restart: unless-stopped
    networks:
      - backend

volumes:
  db-data:

networks:
  backend:
